# Generated by Django 4.0.4 on 2022-05-29 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('cpovc_ovc', '0002_alter_ovchhmembers_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cpovc_registry', '0002_alter_ovchousehold_options'),
        ('cpovc_forms', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PMTCTEvents',
            fields=[
                ('event', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('event_type_id', models.CharField(max_length=10)),
                ('event_counter', models.IntegerField(default=0)),
                ('event_score', models.IntegerField(default=0, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('app_user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'pmtct_events',
            },
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_1',
            new_name='benchmark_1',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_10',
            new_name='benchmark_10',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_11',
            new_name='benchmark_11',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_12',
            new_name='benchmark_12',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_13',
            new_name='benchmark_13',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_14',
            new_name='benchmark_14',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_15',
            new_name='benchmark_15',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_16',
            new_name='benchmark_16',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_17',
            new_name='benchmark_17',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_2',
            new_name='benchmark_2',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_3',
            new_name='benchmark_3',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_4',
            new_name='benchmark_4',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_5',
            new_name='benchmark_5',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_6',
            new_name='benchmark_6',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_7',
            new_name='benchmark_7',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_8',
            new_name='benchmark_8',
        ),
        migrations.RenameField(
            model_name='ovccarebenchmarkscore',
            old_name='bench_mark_9',
            new_name='benchmark_9',
        ),
        migrations.AlterField(
            model_name='ovccarebenchmarkscore',
            name='care_giver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson'),
        ),
        migrations.AlterField(
            model_name='ovccarebenchmarkscore',
            name='household',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cpovc_ovc.ovchousehold'),
        ),
        migrations.CreateModel(
            name='PMTCTQuestions',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=20)),
                ('question', models.CharField(max_length=55)),
                ('domain', models.CharField(max_length=10)),
                ('question_text', models.CharField(max_length=255)),
                ('question_type', models.CharField(max_length=20)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareforms')),
            ],
            options={
                'db_table': 'pmtct_questions',
            },
        ),
        migrations.CreateModel(
            name='PMTCTHEI',
            fields=[
                ('pmtct_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_code', models.CharField(blank=True, max_length=10)),
                ('answer', models.CharField(max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pmtct_hei', to='cpovc_registry.regperson')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.pmtctevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.pmtctquestions')),
            ],
            options={
                'db_table': 'pmtct_hei',
            },
        ),
        migrations.CreateModel(
            name='OVCSubPopulation',
            fields=[
                ('sub_population_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('criteria', models.CharField(max_length=10)),
                ('date_of_event', models.DateField()),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_sub_population',
            },
        ),
        migrations.CreateModel(
            name='OVCProgramRegistration',
            fields=[
                ('prog_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('registration_date', models.DateField(default=django.utils.timezone.now)),
                ('program', models.CharField(max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('child_cbo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prog_cbo', to='cpovc_registry.regorgunit')),
                ('child_chv', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prog_chv', to='cpovc_registry.regperson')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_program_registration',
            },
        ),
        migrations.CreateModel(
            name='OVCHEITracker',
            fields=[
                ('hei_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('hivstatus', models.CharField(max_length=20)),
                ('hivpositive', models.CharField(blank=True, max_length=20, null=True)),
                ('facility', models.CharField(blank=True, max_length=20, null=True)),
                ('ccc', models.CharField(blank=True, max_length=20, null=True)),
                ('vl', models.CharField(blank=True, max_length=20, null=True)),
                ('vldate', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f1date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f1hivtest', models.CharField(max_length=20, null=True)),
                ('f1testresults', models.CharField(max_length=20)),
                ('f1vlresults', models.CharField(max_length=20)),
                ('f1prophylaxis', models.CharField(max_length=20)),
                ('f1mode', models.CharField(max_length=20)),
                ('f2date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f2hivtest', models.CharField(blank=True, max_length=20, null=True)),
                ('f2testresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f2vlresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f2prophylaxis', models.CharField(blank=True, max_length=20, null=True)),
                ('f2immunization', models.CharField(blank=True, max_length=20, null=True)),
                ('f2mode', models.CharField(blank=True, max_length=20, null=True)),
                ('f3date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f3hivtest', models.CharField(blank=True, max_length=20, null=True)),
                ('f3testresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f3vlresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f3prophylaxis', models.CharField(blank=True, max_length=20, null=True)),
                ('f3immunization', models.CharField(blank=True, max_length=20, null=True)),
                ('f3mode', models.CharField(blank=True, max_length=20, null=True)),
                ('f4date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f4hivtest', models.CharField(blank=True, max_length=20, null=True)),
                ('f4testresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f4vlresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f4prophylaxis', models.CharField(blank=True, max_length=20, null=True)),
                ('f4immunization', models.CharField(blank=True, max_length=20, null=True)),
                ('f4mode', models.CharField(blank=True, max_length=20, null=True)),
                ('f5date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('f5hivtest', models.CharField(blank=True, max_length=20, null=True)),
                ('f5testresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f5vlresults', models.CharField(blank=True, max_length=20, null=True)),
                ('f5prophylaxis', models.CharField(blank=True, max_length=20, null=True)),
                ('f5immunization', models.CharField(blank=True, max_length=20, null=True)),
                ('f5mode', models.CharField(blank=True, max_length=20, null=True)),
                ('reason', models.CharField(blank=True, max_length=20, null=True)),
                ('comments', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_hei_tracker',
            },
        ),
        migrations.CreateModel(
            name='OVCFMPEvaluation',
            fields=[
                ('evaluation_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('form_type', models.CharField(max_length=20, null=True)),
                ('caregiver_know_where', models.CharField(max_length=50, null=True)),
                ('caregiver_know_what', models.CharField(max_length=50, null=True)),
                ('caregiver_know_who', models.CharField(max_length=50, null=True)),
                ('child_watch_often', models.CharField(max_length=50, null=True)),
                ('what_program', models.CharField(max_length=50, null=True)),
                ('specific_program', models.CharField(max_length=50, null=True)),
                ('talk_on_topic', models.CharField(max_length=50, null=True)),
                ('watch_with_child', models.CharField(max_length=50, null=True)),
                ('talk_on_sex', models.CharField(max_length=50, null=True)),
                ('talk_on_hiv', models.CharField(max_length=50, null=True)),
                ('talk_on_sti', models.CharField(max_length=50, null=True)),
                ('other_sexual_issues', models.CharField(max_length=50, null=True)),
                ('if_yes', models.CharField(max_length=50, null=True)),
                ('child_asks', models.CharField(max_length=50, null=True)),
                ('if_asks', models.CharField(max_length=50, null=True)),
                ('comfortable', models.CharField(max_length=50, null=True)),
                ('how_talk', models.CharField(max_length=50, null=True)),
                ('enough_information', models.CharField(max_length=50, null=True)),
                ('talk_bad_things', models.CharField(max_length=50, null=True)),
                ('ask_questions', models.CharField(max_length=50, null=True)),
                ('thoughts_on_sex', models.CharField(max_length=50, null=True)),
                ('ready_to_learn', models.CharField(max_length=50, null=True)),
                ('still_young', models.CharField(max_length=50, null=True)),
                ('have_someone', models.CharField(max_length=50, null=True)),
                ('guardian_responsibility', models.CharField(max_length=50, null=True)),
                ('happy_with_child', models.CharField(max_length=50, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('timestamp_created', models.DateTimeField(auto_now_add=True)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_fmp_evaluation',
            },
        ),
        migrations.CreateModel(
            name='OVCCareTransfer',
            fields=[
                ('transfer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=254, null=True)),
                ('date_of_event', models.DateField()),
                ('date_follow_up', models.DateField()),
                ('date_of_transfer', models.DateField()),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_ovc.ovchousehold')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
                ('rec_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regorgunit')),
            ],
            options={
                'verbose_name': 'OVC Transfer',
                'verbose_name_plural': 'OVC Transfers',
                'db_table': 'ovc_care_transfer',
            },
        ),
        migrations.CreateModel(
            name='OVCCareIndividaulCpara',
            fields=[
                ('cpara_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_code', models.CharField(blank=True, max_length=10)),
                ('answer', models.CharField(max_length=15)),
                ('question_type', models.CharField(max_length=50)),
                ('domain', models.CharField(max_length=50)),
                ('date_of_event', models.DateField()),
                ('date_of_previous_event', models.DateField(blank=True, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='icpara_caregiver', to='cpovc_registry.regperson')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_ovc.ovchousehold')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpara_person', to='cpovc_registry.regperson')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccarequestions')),
            ],
            options={
                'db_table': 'ovc_care_individual_cpara',
            },
        ),
        migrations.CreateModel(
            name='OVCCareCaseExit',
            fields=[
                ('case_clouse_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rec_organization', models.CharField(max_length=250, null=True)),
                ('attrition_reason', models.CharField(max_length=10, null=True)),
                ('reason', models.CharField(max_length=10)),
                ('exit_reason_stored', models.CharField(max_length=10, null=True)),
                ('case_files_completed', models.CharField(max_length=5, null=True)),
                ('cw_phone_household', models.CharField(max_length=5, null=True)),
                ('head_hh_linked', models.CharField(max_length=5, null=True)),
                ('sp_informed_graduation', models.CharField(max_length=5, null=True)),
                ('files_stored', models.CharField(max_length=5, null=True)),
                ('transfer_form_completed', models.CharField(max_length=5, null=True)),
                ('follow_up_frequency', models.CharField(max_length=5, null=True)),
                ('sp_informed_tarnsfer', models.CharField(max_length=5, null=True)),
                ('family_folder_sent', models.CharField(max_length=5, null=True)),
                ('attrition_documented', models.CharField(max_length=5, null=True)),
                ('manager_report', models.CharField(max_length=5, null=True)),
                ('date_of_closure', models.DateField()),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True, null=True)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exit_caregiver', to='cpovc_registry.regperson')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regorgunit')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caseclouse_child', to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_closure_exit',
            },
        ),
        migrations.CreateModel(
            name='OVCBenchmarkMonitoring',
            fields=[
                ('obm_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('form_type', models.CharField(max_length=50, null=True)),
                ('benchmark1', models.BooleanField()),
                ('benchmark2', models.BooleanField()),
                ('benchmark3', models.BooleanField()),
                ('benchmark4', models.BooleanField()),
                ('benchmark5', models.BooleanField()),
                ('benchmark6', models.BooleanField()),
                ('benchmark7', models.BooleanField()),
                ('benchmark8', models.BooleanField()),
                ('benchmark9', models.BooleanField()),
                ('succesful_exit_checked', models.BooleanField()),
                ('case_closure_checked', models.BooleanField()),
                ('is_void', models.BooleanField(default=False)),
                ('event_date', models.DateField()),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('caregiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='care_giver', to='cpovc_registry.regperson')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_forms.ovccareevents')),
                ('household', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_ovc.ovchousehold')),
            ],
            options={
                'db_table': 'ovc__benchmark_monitoring',
            },
        ),
    ]

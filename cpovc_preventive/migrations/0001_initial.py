# Generated by Django 4.0.4 on 2022-05-29 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cpovc_ovc', '0002_alter_ovchhmembers_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cpovc_registry', '0002_alter_ovchousehold_options'),
    ]

    operations = [
        migrations.CreateModel(
            name='OVCPreventiveEvents',
            fields=[
                ('event', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('event_type_id', models.CharField(max_length=10)),
                ('event_counter', models.IntegerField(default=0)),
                ('event_score', models.IntegerField(default=0, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('app_user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='prev_user', to=settings.AUTH_USER_MODEL)),
                ('house_hold', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prev_hh', to='cpovc_ovc.ovchousehold')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prev_person', to='cpovc_registry.regperson')),
            ],
            options={
                'db_table': 'ovc_preventive_events',
            },
        ),
        migrations.CreateModel(
            name='OVCPreventiveGroup',
            fields=[
                ('gid', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('group_id', models.CharField(max_length=5)),
                ('group_name', models.CharField(max_length=50)),
                ('group_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('org_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regorgunit')),
            ],
            options={
                'db_table': 'ovc_preventive_group',
            },
        ),
        migrations.CreateModel(
            name='OVCPreventiveService',
            fields=[
                ('ebi_service_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=10, null=True)),
                ('ebi_service_provided', models.CharField(max_length=25)),
                ('ebi_service_client', models.CharField(max_length=10, null=True)),
                ('ebi_service_reffered', models.CharField(max_length=4, null=True)),
                ('ebi_service_completed', models.CharField(max_length=4, null=True)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('ebi_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('ebi_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebi_provide_fk', to='cpovc_registry.regorgunit')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_pfs.ovcpreventiveevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
                ('place_of_ebi_service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ebi_service_place', to='cpovc_registry.regpersonsgeo')),
            ],
            options={
                'db_table': 'ovc_preventive_service',
            },
        ),
        migrations.CreateModel(
            name='OVCPreventiveRegistration',
            fields=[
                ('preventive_reg_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('registration_date', models.DateField(default=django.utils.timezone.now)),
                ('intervention', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('exit_reason', models.CharField(max_length=4, null=True)),
                ('exit_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('caregiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prev_caregiver', to='cpovc_registry.regperson')),
                ('child_cbo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prev_cbo', to='cpovc_registry.regorgunit')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cpovc_pfs.ovcpreventivegroup')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cpovc_ovc.ovcschool')),
            ],
            options={
                'db_table': 'ovc_preventive_registration',
            },
        ),
        migrations.CreateModel(
            name='OVCPreventiveEbi',
            fields=[
                ('ebi_id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('domain', models.CharField(max_length=25, null=True)),
                ('ebi_provided', models.CharField(max_length=25)),
                ('ebi_session', models.CharField(max_length=10)),
                ('ebi_session_type', models.CharField(max_length=10)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('ebi_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('ebi_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ebi_provider_fk', to='cpovc_registry.regorgunit')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_pfs.ovcpreventiveevents')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cpovc_registry.regperson')),
                ('place_of_ebi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ebi_registration_place', to='cpovc_registry.regpersonsgeo')),
            ],
            options={
                'db_table': 'ovc_preventive_ebi',
            },
        ),
    ]
